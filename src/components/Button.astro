---
interface Props {
  text: string;
  link: string;
  downloadName?: string;
  openOnNewTab?: boolean;
  widthFitContent?: boolean;
  justifyCenter?: boolean;
  icon?: "download" | "redirect";
  ariaLabel?: string;
}

const {
  text,
  link,
  downloadName,
  openOnNewTab,
  widthFitContent,
  justifyCenter,
  icon,
  ariaLabel,
} = Astro.props;

var target = "_self";
if (openOnNewTab) {
  var target = "_blank";
}
---

<a
  href={link}
  download={downloadName}
  target={target}
  aria-label={ariaLabel}
  class:list={[{ widthFitContent: widthFitContent }]}
  data-astro-prefetch
>
  <button class:list={[{ justifyCenter: justifyCenter }]}
    >{
      icon != undefined && (
        <svg class="icon">
          <use xlink:href={"/assets/icons.svg#" + icon} />
        </svg>
      )
    }{text}</button
  >
</a>
<style>
  a {
    display: flex;
    text-decoration: none;
    /* margin-bottom: 0.8rem; */
    padding: 0;
  }

  .widthFitContent {
    width: fit-content;
  }

  .justifyCenter {
    justify-content: center;
  }

  button {
    display: flex;
    flex: 1;
    align-items: center;
    text-align: start;
    font-family: var(--font-family-primary);
    font-size: 1.1rem;
    border-radius: 0.3rem;
    border: none;
    padding: 0.2rem 0.8rem;
    color: var(--background-body);
    background-color: var(--text-main);
  }

  .icon {
    margin-right: 0.5rem;
    min-height: 14px;
    height: 14px;
    min-width: 14px;
    width: 14px;
    fill: var(--background-body);
  }

  button:hover .icon {
    fill: var(--text-main);
  }

  button:hover {
    background-color: var(--background-body);
    color: var(--text-main);
    cursor: pointer;
  }

  @media (max-width: 420px) {
    button {
      font-size: 0.9rem;
    }

    .icon {
      min-height: 12px;
      height: 12px;
      min-width: 12px;
      width: 12px;
    }
  }
</style>
