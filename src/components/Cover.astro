<input type="checkbox" id="cover" class="cover-checkbox visuallyHidden" />
<label
  class="cover"
  aria-label="Animation: Build Smart, Build Sustainable, Build Systems. Click to close animation."
  for="cover"
>
  <div aria-hidden="true" class="cover-text">
    <div class="txt-build"></div>
    <div class="systems-overflow">
      <div class="systems-container">
        <div class="txt-systems"></div>
        <div class="txt-sustainable"></div>
        <div class="txt-smart"></div>
      </div>
    </div>
  </div>
</label>

<style>
  .cover {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100svh;
    padding-left: 1svw;
    background-color: var(--background-body);
    z-index: 5;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.5s ease-out;
  }

  .cover-checkbox:checked ~ .cover {
    display: none;
  }

  .cover-text {
    display: flex;
    position: fixed;
    top: 50%;
    transform: translate3D(0, -50%, 0);
    width: 100svw;
  }

  .txt-build::before {
    content: "Build";
  }

  .txt-build {
    display: flex;
    font-size: 11svw;
    justify-content: center;
  }

  .txt-systems::before {
    content: "Systems";
  }

  .txt-sustainable::before {
    content: "Sustainable";
  }

  .txt-smart::before {
    content: "Smart";
  }

  .systems-overflow {
    overflow: hidden;
    height: 17svw;
  }

  .systems-container {
    font-family: var(--font-family-secondary);
    position: relative;
    font-size: 11svw;
    flex: 1;
    transform: translate3D(0, -66%, 0);
    animation: systems-animation var(--animation-time) var(--bezier-animation)
      forwards;
    animation-delay: var(--animation-delay);
  }

  @keyframes systems-animation {
    from {
    }
    25% {
      transform: translate3D(0, -33%, 0);
    }
    35% {
      transform: translate3D(0, -33%, 0);
    }
    60% {
      transform: translate3D(0, 0, 0);
    }
    70% {
      font-size: 11svw;
      transform: translate3D(0, 0, 0);
    }
    to {
      font-size: 2.7rem;
      transform: translate3D(0, 0, 0);
    }
  }

  .cover {
    animation: fadeout var(--animation-time) var(--bezier-animation) forwards;
    animation-delay: var(--animation-delay);
  }

  @keyframes fadeout {
    90% {
      opacity: 1;
    }
    99% {
      opacity: 0;
      visibility: visible;
    }
    to {
      opacity: 0;
      visibility: hidden;
    }
  }

  .txt-build {
    animation: build-animation var(--animation-time) var(--bezier-animation)
      forwards;
    animation-delay: var(--animation-delay);
  }

  @keyframes build-animation {
    70% {
      font-size: 11svw;
    }
    to {
      font-size: 2.7rem;
    }
  }

  .txt-sustainable,
  .txt-smart {
    animation: block-none var(--animation-time) var(--bezier-animation) forwards;
    animation-delay: var(--animation-delay);
  }

  @keyframes block-none {
    60% {
      visibility: hidden;
    }
    to {
      visibility: hidden;
    }
  }

  .cover-text {
    animation: cover-text-fixed var(--animation-time) var(--bezier-animation)
      forwards;
    animation-delay: var(--animation-delay);
  }

  @keyframes cover-text-fixed {
    70% {
      top: 50%;
      transform: translate3D(0, -50%, 0);
    }
    to {
      top: 0;
      transform: translate3D(0, 0, 0);
    }
  }

  @media (max-width: 1280px) {
    @keyframes cover-text-fixed {
      70% {
        top: 50%;
        transform: translate3D(0, -50%, 0);
        padding: 0;
      }
      to {
        top: 0;
        transform: translate3D(0, 0, 0);
        padding: 0.6rem 1rem;
      }
    }

    @keyframes systems-animation {
      from {
      }
      25% {
        transform: translate3D(0, -33%, 0);
      }
      35% {
        transform: translate3D(0, -33%, 0);
      }
      60% {
        transform: translate3D(0, 0, 0);
      }
      70% {
        font-size: 11svw;
        transform: translate3D(0, 0, 0);
      }
      to {
        font-size: var(--primary-msg-size-desktop);
        transform: translate3D(0, 0, 0);
      }
    }

    @keyframes build-animation {
      70% {
        font-size: 11svw;
      }
      to {
        font-size: var(--primary-msg-size-desktop);
      }
    }
  }

  @media (max-width: 640px) {
    @keyframes cover-text-fixed {
      70% {
        top: 50%;
        transform: translate3D(0, -50%, 0);
        padding: 0;
      }
      to {
        top: 0;
        transform: translate3D(0, 0, 0);
        padding: 0.6rem 5%;
      }
    }

    @keyframes systems-animation {
      from {
      }
      25% {
        transform: translate3D(0, -33%, 0);
      }
      35% {
        transform: translate3D(0, -33%, 0);
      }
      60% {
        transform: translate3D(0, 0, 0);
      }
      70% {
        font-size: 11svw;
        transform: translate3D(0, 0, 0);
      }
      to {
        font-size: 1.6rem;
        transform: translate3D(0, 0, 0);
      }
    }

    @keyframes build-animation {
      70% {
        font-size: 11svw;
      }
      to {
        font-size: 1.6rem;
      }
    }
  }

  @media (max-width: 420px) {
    @keyframes cover-text-fixed {
      70% {
        top: 50%;
        transform: translate3D(0, -50%, 0);
        padding: 0;
      }
      to {
        top: 0;
        transform: translate3D(0, 0, 0);
        padding: 0.5rem 10px;
      }
    }

    @keyframes systems-animation {
      from {
      }
      25% {
        transform: translate3D(0, -33%, 0);
      }
      35% {
        transform: translate3D(0, -33%, 0);
      }
      60% {
        transform: translate3D(0, 0, 0);
      }
      70% {
        font-size: 11svw;
        transform: translate3D(0, 0, 0);
      }
      to {
        font-size: 1.4rem;
        transform: translate3D(0, 0, 0);
      }
    }

    @keyframes build-animation {
      70% {
        font-size: 11svw;
      }
      to {
        font-size: 1.4rem;
      }
    }
  }
</style>

<script>
  // JavaScript code to mark checkbox as checked on first scroll
  document.addEventListener("DOMContentLoaded", function () {
    var checkboxChecked = false;

    window.addEventListener("scroll", function () {
      if (!checkboxChecked) {
        const coverElement = document.getElementById(
          "cover"
        )! as HTMLInputElement;
        coverElement.checked = true;
        checkboxChecked = true;
      }
    });
  });
</script>
